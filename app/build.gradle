/**
 * Copyright (C) 2025 Deutsche Telekom AG
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * In accordance with Sections 4 and 6 of the License, the following exclusions apply:
 *
 *  1. Trademarks & Logos – The names, logos, and trademarks of the Licensor are not covered by this License and may not be used without separate permission.
 *  2. Design Rights – Visual identities, UI/UX designs, and other graphical elements remain the property of their respective owners and are not licensed under the Apache License 2.0.
 *  3: Non-Coded Copyrights – Documentation, images, videos, and other non-software materials require separate authorization for use, modification, or distribution.
 *
 * These elements are not considered part of the licensed Work or Derivative Works unless explicitly agreed otherwise. All elements must be altered, removed, or replaced before use or distribution. All rights to these materials are reserved, and Contributor accepts no liability for any infringing use. By using this repository, you agree to indemnify and hold harmless Contributor against any claims, costs, or damages arising from your use of the excluded elements.
 *
 * SPDX-FileCopyrightText: 2025 Deutsche Telekom AG
 * SPDX-License-Identifier: Apache-2.0 AND LicenseRef-Deutsche-Telekom-Brand
 * License-Filename: LICENSES/Apache-2.0.txt LICENSES/LicenseRef-Deutsche-Telekom-Brand.txt
 */

apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

apply from: '../config/common.gradle'
apply from: '../config/secrets.gradle'

apply plugin: 'com.google.gms.google-services'

android {

    namespace 'com.telekom.citykey'

    compileSdkVersion = libs.versions.android.compileSdk.get() as Integer
    buildToolsVersion = rootProject.buildToolsVersion

    def APP_VERSION = "1.3.16"
    def MAPS_API_KEY = getSecret('MAPS_API_KEY')

    defaultConfig {

        applicationId "com.telekom.citykey"
        minSdkVersion libs.versions.android.minSdk.get() as Integer
        targetSdkVersion libs.versions.android.targetSdk.get() as Integer
        versionCode 112
        versionName APP_VERSION

        manifestPlaceholders = [MAPS_API_KEY: MAPS_API_KEY]

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField "String", "APP_VERSION", "\"$APP_VERSION\""
        resourceConfigurations += ['en', 'de']
        multiDexEnabled = true

        buildConfigField "String", "FLAVOR", "\"production\""
        buildConfigField "String", "TPNS_HOST_NAME", "\"about:blank\""
        buildConfigField "String", "HOST_NAME", "\"about:blank\""
        buildConfigField "String", "IMAGE_URL", "\"file:///android_asset/\""
        buildConfigField "int", "CITY_ID", "8"
        buildConfigField "String", "SERVICES_VERSION", "\"X.X\""
        buildConfigField "String", "ADJUST_APP_TOKEN", "\"X.X\""
        buildConfigField "String", "MOENGAGE_APP_ID", "\"X.X\""
        buildConfigField "String", "KOMMUNIX_ENV_REQUEST", "\"X.X\""
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }

    buildTypes {
        debug {}
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        jniLibs { useLegacyPackaging = true }
        resources.excludes.add("META-INF/*")
    }

    /**
     * To generate the native debug symbols file on your local machine for the production build,
     * build the APK by removing the comments from the following block of code.
     */
//    project.tasks.matching { it.name.startsWith('strip') }.configureEach { task ->
//        task.enabled = false
//    }
}

// Needed for generating debug symbols
android.defaultConfig.ndk.debugSymbolLevel = 'FULL'
android.ndkVersion = '25.1.8937393'
android.defaultConfig.ndk.abiFilters('armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64')

apply from: '../config/quality.gradle'
apply from: '../config/dependencies.gradle'
apply from: './kover.gradle'

dependencies {

    implementation(projects.networkinterface)
    implementation(projects.network)

    implementation(projects.pictures)
}
